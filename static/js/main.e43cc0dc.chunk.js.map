{"version":3,"sources":["ui.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","GlobalWrapper","styled","div","Rectangle","props","height","color","CollectionWrapper","markReplaced","arr","i","map","item","index","markSorted","generateRandomNumber","max","min","Math","floor","random","CollectionView","collection","R","number","preparedCollection","length","generatedPath","proccesArr","j","colorReplaced","colorSorted","push","generateCollectionSortPath","collectionLength","maxNumber","generateCollection","incArr","App","interval","useRef","stopCounter","clearInterval","current","useState","setIndex","prepared","setPrepare","isSorting","setSorting","on","setOn","useEffect","setInterval","prevState","Fragment","onClick","prev","memo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e43cc0dc.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from \"styled-components\"\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n      box-sizing: border-box;\n  }\n  img {\n    max-width: 100%;\n    height: auto;\n  }\n  body {\n    padding: 0;\n    margin: 0;\n  }\n`\n\nexport const GlobalWrapper = styled.div`\n    width: 100%;\n    height: 100vh;\n    background: #fffccc;\n    position: relative;\n    display: flex;\n\n    justify-content: space-evenly;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const Rectangle = styled.div`\n  flex-grow: 1;\n  height: ${props => props.height}px;\n  background-color: ${props => props.color};\n  margin-right: 1px;\n  margin-left: 1px;\n  margin-bottom: -3px;\n`\nexport const CollectionWrapper = styled.div`\n  margin-bottom: 50px;\n  display: flex;\n  width: 50%;\n  min-width: 800px;\n  height: 300px;\n  align-items: flex-end;\n  border: 3px solid black;\n`","import * as R from 'ramda';\nimport React, { useState, useEffect, useRef, memo } from 'react';\nimport { GlobalWrapper, GlobalStyle, Rectangle, CollectionWrapper } from './ui';\n\nconst markReplaced = (arr, i) => arr.map((item, index) => ({ ...item, color: (index === i) || (index === i + 1) ? 'blue' : 'black' }));\n\nconst markSorted = (arr, i) => arr.map((item, index) => index >= i ? { ...item, color: 'red' } : item);\n\nconst markAllSorted = (arr) => arr.map((incArr, index) => {\n  if (index === R.length(arr) - 1) {\n    incArr[0].color = 'red'\n    incArr[1].color = 'red'\n  }\n  return incArr\n})\n\nconst generateCollectionSortPath = (arr) => {\n  const proccesArr = [];\n  for (let i = 0; i < arr.length - 1; i++) {\n    for (let j = 0; j < arr.length - 1 - i; j++) {\n\n      if (arr[j].number > arr[j + 1].number) {\n        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]]\n      }\n      const colorReplaced = markReplaced(arr, j)\n      const colorSorted = markSorted(colorReplaced, R.length(colorReplaced) - i)\n      proccesArr.push(colorSorted);\n    }\n  }\n  return proccesArr;\n};\n\nconst generateRandomNumber = (max = 100, min = 10) => Math.floor(Math.random() * (max - min)) + min;\n\nconst generateCollection = (collectionLength, maxNumber) => {\n  const collection = []\n  for (let i = 0; i < collectionLength; i++) {\n    collection.push({\n      number: generateRandomNumber(maxNumber),\n      color: false,\n    })\n  }\n  return collection;\n}\n\nfunction CollectionView({ collection }) {\n  return R.length(collection) && collection.map((item, i) => (\n    <Rectangle key={i} height={item.number} color={item.color} />\n  ))\n}\n\nconst preparedCollection = (length, max) => {\n  const collection = generateCollection(length, max)\n  const generatedPath = generateCollectionSortPath(collection)\n  const marked = markAllSorted(generatedPath)\n  return marked\n}\n\nconst length = 150;\nconst maxHeight = 250;\nconst initSpeed = 10\n\n\n\nfunction App() {\n  const interval = useRef(null)\n  const stopCounter = () => clearInterval(interval.current)\n  const [index, setIndex] = useState(0)\n  const [prepared, setPrepare] = useState(() => preparedCollection(length, maxHeight));\n  const [isSorting, setSorting] = useState(false);\n  const [on, setOn] = useState('off');\n\n\n  useEffect(() => {\n    if (index >= R.length(prepared) - 1) {\n      stopCounter()\n      setOn(false)\n      setSorting(false)\n    }\n  }, [index, prepared])\n\n  useEffect(() => {\n    switch (on) {\n      case 'play': {\n        setSorting(true)\n        interval.current = setInterval(() => {\n          setIndex(prevState => prevState + 1)\n        }, initSpeed);\n        break;\n      }\n      case 'pause': {\n        stopCounter();\n        break;\n      }\n    }\n  }, [on])\n\n\n\n  const clickHandler = () => {\n    if (isSorting) return setOn((prev) => prev === 'play' ? setOn('pause') : setOn('play'))\n\n    if (!index) return setOn('play')\n    setPrepare(preparedCollection(length, maxHeight))\n    setIndex(0)\n  }\n\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      <GlobalWrapper>\n        <CollectionWrapper onClick={clickHandler}>\n          <CollectionView collection={prepared[index]} />\n        </CollectionWrapper>\n      </GlobalWrapper>\n\n    </React.Fragment>\n  );\n}\n\nexport default memo(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,  document.getElementById('root'));\n"],"sourceRoot":""}